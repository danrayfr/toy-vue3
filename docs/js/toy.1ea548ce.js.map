{"version":3,"file":"js/toy.1ea548ce.js","mappings":"qOAKO,SAASA,IACd,MAAMC,GAAOC,EAAAA,EAAAA,IAAI,IACXC,GAAcD,EAAAA,EAAAA,IAAI,IAClBE,GAASC,EAAAA,EAAAA,IAAS,CAAEC,MAAO,KACjC,IAAIC,GAAQL,EAAAA,EAAAA,IAAI,IAChB,MAAMM,GAAYN,EAAAA,EAAAA,KAAI,GAEhBO,GAASC,EAAAA,EAAAA,MAUTC,EAAmBC,EAAAA,EAAI;;;;;;;;;;;;;;;;;;;KAqBrBC,OAAQC,EAAS,QAAEC,IAAYC,EAAAA,EAAAA,IAAYL,GAE7CM,EAASC,UAEb,IAAKjB,EAAKK,QAAUH,EAAYG,QAAUF,EAAOE,MAE/C,YADAa,QAAQC,IAAI,4BAIdZ,EAAUF,OAAQ,EAElB,MAAMe,EAAQC,aAAaC,QAAQ,SAEnC,IAAKF,EAEH,YADAF,QAAQC,IAAI,0BAId,MAAMI,EAAY,CAChBvB,KAAMA,EAAKK,MACXH,YAAaA,EAAYG,MACzBF,OAAQA,EAAOE,OAGjB,IACE,MAAM,KAAEmB,SAAeX,EAAUU,GAE3BE,GAAMC,EAAAA,EAAAA,KAAS,IAAMF,EAAKX,WAAWY,KAAO,KAClDP,QAAQC,IAAI,OAAQM,EAAIpB,OAExB,MAAMsB,GAASD,EAAAA,EAAAA,KAAS,IAAMF,EAAKX,WAAWc,QAAU,KAMxD,OAJArB,EAAMD,MAAQsB,EAEdnB,EAAOoB,KAAK,CAAE5B,KAAM,cAAe6B,OAAQ,CAAEC,GAAIL,EAAIpB,MAAMyB,MAEpDL,EAAIpB,MAAOsB,CAEpB,CAAC,MAAMI,GACLzB,EAAMD,MAAQ0B,EAAEC,SAAW,2BAC3Bd,QAAQC,IAAI,SAAUb,EAAMD,MAC9B,CAAC,QACCE,EAAUF,OAAQ,CACpB,GAGF,MAAO,CAAEL,OAAME,cAAaC,SAAQa,SAAQT,YAAWD,QACzD,C,qMCjEA,IAAI,KAAEN,EAAI,YAAEE,EAAW,OAAEC,EAAM,OAAEa,EAAM,UAAET,EAAS,MAAED,GAAUP,I,2xBCnB9D,MAAMkC,GAA2B,OAAgB,EAAQ,CAAC,CAAC,YAAY,qBAEvE,O,kfC0BMjC,GAAOC,EAAAA,EAAAA,IAAI,IACXC,GAAcD,EAAAA,EAAAA,IAAI,IAClBE,GAASF,EAAAA,EAAAA,IAAI,IACnB,IAAIK,GAAQL,EAAAA,EAAAA,IAAI,IAEhB,MAAMO,GAASC,EAAAA,EAAAA,MAETyB,EAAsBvB,EAAAA,EAAI;;;;;;;;;;;;;;;;;;;;GAsBxBC,OAAQuB,EAAS,QAAErB,IAAYC,EAAAA,EAAAA,IAAYmB,GAE7CE,EAASnB,UACb,IAAKjB,EAAKK,QAAUH,EAAYG,MAE9B,YADAa,QAAQC,IAAI,4BAId,MAAMI,EAAY,CAChBO,GAAIO,EAAMP,GACV9B,KAAMA,EAAKK,MACXH,YAAaA,EAAYG,MACzBF,OAAQA,EAAOE,OAGjB,IACI,MAAM,KAAEmB,SAAeW,EAAUZ,GAE3BE,GAAMC,EAAAA,EAAAA,KAAS,IAAMF,EAAKW,WAAWV,KAAO,KAClDP,QAAQC,IAAI,OAAQM,EAAIpB,OAExB,MAAMsB,GAASD,EAAAA,EAAAA,KAAS,IAAMF,EAAKW,WAAWR,QAAU,KAMxD,OAJArB,EAAMD,MAAQsB,EAEdnB,EAAOoB,KAAK,CAAE5B,KAAM,cAAe6B,OAAQ,CAAEC,GAAIL,EAAIpB,MAAMyB,MAEpDL,EAAIpB,MAAOC,EAAMD,KAE1B,CAAC,MAAM0B,GACLzB,EAAMD,MAAQ0B,EAAEC,SAAW,2BAC3Bd,QAAQC,IAAI,SAAUb,EAAMD,MAC9B,G,slBCzFJ,MAAM4B,GAA2B,OAAgB,EAAQ,CAAC,CAAC,YAAY,qBAEvE,O","sources":["webpack://toy/./src/gql/mutations/toy/createToyMutation.js","webpack://toy/./src/views/Toy.vue","webpack://toy/./src/views/Toy.vue?185e","webpack://toy/./src/views/UpdateToy.vue","webpack://toy/./src/views/UpdateToy.vue?1c47"],"sourcesContent":["import { useRouter } from 'vue-router';\nimport { useMutation } from '@vue/apollo-composable';\nimport gql from 'graphql-tag';\nimport { ref, computed, reactive} from 'vue';\n\nexport function createToyMutation() { \n  const name = ref('');\n  const description = ref('');\n  const images = reactive({ value: [] });\n  let error = ref('');\n  const hasCreate = ref(false);\n\n  const router = useRouter();\n\n  const onFileChange = (event) => {\n    const fileList = event.target.files;\n    for (let i = 0; i < fileList.length; i++) {\n      images.value.push(fileList[i]);\n      console.log(images.value)\n    }\n  };\n\n  const ADD_TOY_MUTATION = gql`\n    mutation addToy($name: String!, $description: String!, $images: [String!]) {\n      createToy(input: {\n        name: $name,\n        description: $description,\n        images: $images,\n      }) {\n        toy {\n          id\n          name\n          description\n          imagesUrl\n          postedBy {\n            id\n            name\n          }\n        }\n      }\n    }\n  `;\n\n  const { mutate: createToy, loading } = useMutation(ADD_TOY_MUTATION);\n\n  const create = async() => {\n\n    if (!name.value && !description.value && !images.value) {\n      console.log(\"All fields are required.\");\n      return;\n    }\n\n    hasCreate.value = true;\n  \n    const token = localStorage.getItem(\"token\");\n  \n    if (!token) {\n      console.log(\"User not authenticated\");\n      return;\n    }\n  \n    const variables = {\n      name: name.value,\n      description: description.value,\n      images: images.value\n    }\n    \n    try {\n      const { data } = await createToy(variables)\n      \n      const toy = computed(() => data.createToy?.toy ?? []);\n      console.log(\"Toy:\", toy.value);\n  \n      const errors = computed(() => data.createToy?.errors ?? []);\n  \n      error.value = errors;\n\n      router.push({ name: 'toy-details', params: { id: toy.value.id }})\n  \n      return toy.value, errors;\n  \n    }catch(e) {\n      error.value = e.message || \"An unknown error occured\"\n      console.log(\"Error:\", error.value);\n    }finally {\n      hasCreate.value = false;\n    }\n  };\n\n  return { name, description, images, create, hasCreate, error }\n}","<template>\n  <div>\n    <h1 class=\"text-3xl font-bold underline\">Toy Mutations</h1>\n    <form action=\"\" method=\"POST\" @submit.prevent=\"create\">\n      <div>\n        <input type=\"name\" v-model=\"name\" placeholder=\"Enter the name of the toy\">\n      </div>\n\n      <div>\n        <textarea v-model=\"description\" placeholder=\"toy description...\">\n        </textarea>\n      </div>\n\n      <div>\n        <button class=\"submit\" type=\"submit\" :disabled=\"hasCreate\">Create Toy</button>\n      </div>\n      \n    </form>\n  </div>\n  <div v-if=\"error\">{{error}}</div>\n</template>\n\n<script setup>\nimport { createToyMutation } from \"@/gql/mutations/toy/createToyMutation.js\";\n\nlet { name, description, images, create, hasCreate, error } = createToyMutation();\n\n</script>\n\n<style scoped>\n\nbutton[disabled] { \n  border: 1px solid #999999;\n  background-color: #cccccc;\n  color: #666666;\n  cursor: not-allowed !import ant;\n}\n\n</style>","import script from \"./Toy.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Toy.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./Toy.vue?vue&type=style&index=0&id=5d5fd591&scoped=true&lang=css\"\n\nimport exportComponent from \"/home/dray/chatgenie/vue3/toy/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-5d5fd591\"]])\n\nexport default __exports__","<template>\n  <div>\n    <h1 class=\"text-3xl font-bold underline\">Toy Mutations</h1>\n    <form action=\"\" method=\"POST\" @submit.prevent=\"update\">\n      <div>\n        <input type=\"name\" v-model=\"name\" placeholder=\"Enter the name of the toy\">\n      </div>\n\n      <div>\n        <textarea v-model=\"description\" placeholder=\"toy description...\">\n        </textarea>\n      </div>\n\n      <div>\n        <button class=\"submit\" type=\"submit\">Update Toy</button>\n      </div>\n    </form>\n  </div>\n  <div v-if=\"error\">{{error}}</div>\n</template>\n\n<script setup>\nimport { useRouter } from 'vue-router';\nimport { useMutation } from '@vue/apollo-composable';\nimport gql from 'graphql-tag';\nimport { ref, computed, defineProps } from 'vue';\n\nconst props = defineProps({\n  id: {\n    type: String, \n    required: true\n  }\n});\n\nconst name = ref('');\nconst description = ref('');\nconst images = ref([]);\nlet error = ref('');\n\nconst router = useRouter();\n\nconst UPDATE_TOY_MUTATION = gql`\n  mutation updateToy($id: ID!, $name: String!, $description: String!, $images: [String!]) { \n    updateToy(input: { \n      id: $id,\n      name: $name,\n      description: $description,\n      images: $images\n    }) {\n      toy {\n        id\n        name\n        description\n        imagesUrl\n        postedBy {\n          id\n          name\n        }\n      }\n    }\n  }\n`;\n\nconst { mutate: updateToy, loading } = useMutation(UPDATE_TOY_MUTATION);\n\nconst update = async() => {\n  if (!name.value && !description.value) {\n    console.log(\"All fields are required.\");\n    return;\n  }\n\n  const variables = {\n    id: props.id,\n    name: name.value,\n    description: description.value,\n    images: images.value\n  }\n\n  try {\n      const { data } = await updateToy(variables)\n      \n      const toy = computed(() => data.updateToy?.toy ?? []);\n      console.log(\"Toy:\", toy.value);\n  \n      const errors = computed(() => data.updateToy?.errors ?? []);\n  \n      error.value = errors;\n\n      router.push({ name: 'toy-details', params: { id: toy.value.id }})\n  \n      return toy.value, error.value;\n  \n    }catch(e) {\n      error.value = e.message || \"An unknown error occured\"\n      console.log(\"Error:\", error.value);\n    }\n};\n\n</script>\n\n<style scoped>\ntextarea {\n  width: 30%;\n  height: 150px;\n  padding: 12px 20px;\n  box-sizing: border-box;\n  border: 2px solid #ccc;\n  border-radius: 4px;\n  background-color: #fff;\n  font-size: 1em;\n  resize: none;\n}\n\nbutton[disabled] { \n  border: 1px solid #999999;\n  background-color: #cccccc;\n  color: #666666;\n  cursor: not-allowed !important;\n}\n</style>\n","import script from \"./UpdateToy.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./UpdateToy.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./UpdateToy.vue?vue&type=style&index=0&id=0ee1a6cb&scoped=true&lang=css\"\n\nimport exportComponent from \"/home/dray/chatgenie/vue3/toy/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-0ee1a6cb\"]])\n\nexport default __exports__"],"names":["createToyMutation","name","ref","description","images","reactive","value","error","hasCreate","router","useRouter","ADD_TOY_MUTATION","gql","mutate","createToy","loading","useMutation","create","async","console","log","token","localStorage","getItem","variables","data","toy","computed","errors","push","params","id","e","message","__exports__","UPDATE_TOY_MUTATION","updateToy","update","props"],"sourceRoot":""}